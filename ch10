#EX 1

import turtle

turtle.setup(400,500)                
wn = turtle.Screen()                
wn.title("Handling keypresses!")    
wn.bgcolor("lightgreen")           
tess = turtle.Turtle()             


def h1():
   tess.forward(30)

def h2():
   tess.left(45)

def h3():
   tess.right(45)

def h4():
    wn.bye()                        

def h5():
    tess.color("red")

def h6():
    tess.color("green")

def h7():
    tess.color("blue")
    
def h8():
    sz=tess.width()
    if sz<20:
        tess.width(sz+1)
    

def h9():
    sz=tess.width()
    if sz>1:
        tess.width(sz-1)
    
def h10():
    tess.penup()

def h11():
    tess.pendown()
    
wn.onkey(h1, "Up")
wn.onkey(h2, "Left")
wn.onkey(h3, "Right")
wn.onkey(h4, "q")
wn.onkey(h5, "r")
wn.onkey(h6, "g")
wn.onkey(h7, "b")
wn.onkey(h8, "+")
wn.onkey(h9, "-")
wn.onkey(h10, "u")
wn.onkey(h11, "d")

wn.listen()
wn.mainloop()


#EX 2
import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()


def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()


draw_housing()

tess.penup()
# Position tess onto the place where the green light should be
tess.forward(40)
tess.left(90)
tess.forward(50)
# Turn tess into a big green circle
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("green")

# A traffic light is a kind of state machine with three states,
# Green, Orange, Red.  We number these states  0, 1, 2
# When the machine changes state, we change tess' position and
# her fillcolor.

# This variable holds the current state of the machine
state_num = 0


def advance_state_machine():
    global state_num
    if state_num == 0:       # Transition from state 0 to state 1
        tess.forward(70)
        tess.fillcolor("orange")
        state_num = 1
    elif state_num == 1:     # Transition from state 1 to state 2
        tess.forward(70)
        tess.fillcolor("red")
        state_num = 2
    else:                    # Transition from state 2 to state 0
        tess.back(140)
        tess.fillcolor("green")
        state_num = 0
    wn.ontimer(advance_state_machine, 500)

# Bind the event handler to the space key.
wn.ontimer(advance_state_machine, 500)

wn.listen()                      # Listen for events
wn.mainloop()


#EX 3

import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
bob = turtle.Turtle()
tim = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()


draw_housing()

tess.penup()
# Position tess onto the place where the green light should be



state_num = 0


def advance_state_machine():
    global state_num
    if state_num == 0:       # Transition from state 0 to state 1
        tess.showturtle()
        tim.hideturtle()
        bob.hideturtle()
        state_num = 1
    elif state_num == 1:     # Transition from state 1 to state 2
        tess.hideturtle()
        tim.showturtle()
        bob.hideturtle()
        state_num = 2
    else:                    # Transition from state 2 to state 0
        tess.hideturtle()
        tim.hideturtle()
        bob.showturtle()
        state_num = 0
    wn.ontimer(advance_state_machine, 500)

bob.penup()
bob.hideturtle()
bob.forward(40)
bob.left(90)
bob.forward(50)
bob.shape("circle")
bob.shapesize(3)
bob.fillcolor("green")

tim.penup()
tim.hideturtle()
tim.forward(40)
tim.left(90)
tim.forward(120)
tim.shape("circle")
tim.shapesize(3)
tim.fillcolor("orange")

tess.penup()
tess.hideturtle()
tess.forward(40)
tess.left(90)
tess.forward(190)
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("red")




def orange():
    tess.fillcolor("orange")

def red():
    bob.fillcolor("red")

def green():
    tim.fillcolor("green")
    

wn.ontimer(advance_state_machine, 500)

wn.listen()                    
wn.mainloop()

#EX 4

import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
bob = turtle.Turtle()
tim = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()


draw_housing()

tess.penup()
# Position tess onto the place where the green light should be



state_num = 0


def advance_state_machine():
    global state_num
    if state_num == 0:       # Transition from state 0 to state 1
        tess.fillcolor("red")
        tim.fillcolor("darkorange")
        bob.fillcolor("darkgreen")
        state_num = 1
    elif state_num == 1:     # Transition from state 1 to state 2
        tess.fillcolor("darkred")
        tim.fillcolor("orange")
        bob.fillcolor("darkgreen")
        state_num = 2
    else:                    # Transition from state 2 to state 0
        tess.fillcolor("darkred")
        tim.fillcolor("darkorange")
        bob.fillcolor("green")
        state_num = 0
    wn.ontimer(advance_state_machine, 500)

bob.penup()
bob.forward(40)
bob.left(90)
bob.forward(50)
bob.shape("circle")
bob.shapesize(3)
bob.fillcolor("green")

tim.penup()
tim.forward(40)
tim.left(90)
tim.forward(120)
tim.shape("circle")
tim.shapesize(3)
tim.fillcolor("orange")

tess.penup()
tess.forward(40)
tess.left(90)
tess.forward(190)
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("red")




def orange():
    tess.fillcolor("orange")

def red():
    bob.fillcolor("red")

def green():
    tim.fillcolor("green")
    

wn.ontimer(advance_state_machine, 500)

wn.listen()                    
wn.mainloop()



#EX 5

import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("white")
tess = turtle.Turtle()
bob = turtle.Turtle()
tim = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()


draw_housing()

tess.penup()
# Position tess onto the place where the green light should be



state_num = 0


def advance_state_machine():
    global state_num
    if state_num == 0:       # Transition from state 0 to state 1
        tess.fillcolor("darkred")
        tim.fillcolor("darkorange")
        bob.fillcolor("lightgreen")
        state_num = 1
        wn.ontimer(advance_state_machine, 3000)
    elif state_num == 1:     # Transition from state 1 to state 2
        tess.fillcolor("darkred")
        tim.fillcolor("yellow")
        bob.fillcolor("lightgreen")
        state_num = 2
        wn.ontimer(advance_state_machine, 1000)
    elif state_num == 2:     # Transition from state 1 to state 2
        tess.fillcolor("darkred")
        tim.fillcolor("yellow")
        bob.fillcolor("darkgreen")
        state_num = 3
        wn.ontimer(advance_state_machine, 1000)
    else:                    # Transition from state 2 to state 0
        tess.fillcolor("red")
        tim.fillcolor("darkorange")
        bob.fillcolor("darkgreen")
        state_num = 0
        wn.ontimer(advance_state_machine, 2000)
    

bob.penup()
bob.forward(40)
bob.left(90)
bob.forward(50)
bob.shape("circle")
bob.shapesize(3)
bob.fillcolor("green")

tim.penup()
tim.forward(40)
tim.left(90)
tim.forward(120)
tim.shape("circle")
tim.shapesize(3)
tim.fillcolor("yellow")

tess.penup()
tess.forward(40)
tess.left(90)
tess.forward(190)
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("red")




def orange():
    tess.fillcolor("orange")

def red():
    bob.fillcolor("red")

def green():
    tim.fillcolor("green")
    
wn.ontimer(advance_state_machine, 100)


wn.listen()                    
wn.mainloop()

#EX 6

