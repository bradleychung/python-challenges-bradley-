#EX 1
#a
xs = [1,3,5,7,9,11,13,15,17,19]
ys = [1,2,3,4,5,6,7,8,9]

def merge(xs, ys):
    """ merge sorted lists xs and ys. Return a sorted result """
    result = []
    for i in xs:
        for j in ys:
            if i == j:
                result.append(i)
                break
    return(result)

print(merge(xs, ys))

#b
xs = [1,3,5,7,9,11,13,15,17,19]
ys = [1,2,3,4,5,6,7,8,9]

def merge(xs, ys):
    """ merge sorted lists xs and ys. Return a sorted result """
    result = []
    for i in xs:
        if i not in ys:
            result.append(i)
            
    return(result)

print(merge(xs, ys))

#c
xs = [1,3,5,7,9,11,13,15,17,19]
ys = [1,2,3,4,5,6,7,8,9]

def merge(xs, ys):
    """ merge sorted lists xs and ys. Return a sorted result """
    result = []
    for i in ys:
        if i not in xs:
            result.append(i)

    return(result)

print(merge(xs, ys))

#d
xs = [1,3,5,7,9,11,13,15,17,19]
ys = [1,2,3,4,5,6,7,8,9]

def merge(xs, ys):
    """ merge sorted lists xs and ys. Return a sorted result """
    result = []
    xi = 0
    yi = 0

    while True:
        if xi >= len(xs):          # If xs list is finished,
            result.extend(ys[yi:]) # Add remaining items from ys
            return result          # And we're done.

        if yi >= len(ys):          # Same again, but swap roles
            result.extend(xs[xi:])
            return result

        # Both lists still have items, copy smaller item to result.
        if xs[xi] <= ys[yi]:
            result.append(xs[xi])
            xi += 1
        else:
            result.append(ys[yi])
            yi += 1

print(merge(xs, ys))

#e

