EX 1

>>> "Python"[1]
y
>>> "Strings are sequences of characters."[5]
g
>>> len("wonderful")
9
>>> "Mystery"[:4]
Myst
>>> "p" in "Pineapple"
true
>>> "apple" in "Pineapple"
true
>>> "pear" not in "Pineapple"
true
>>> "apple" > "pineapple"
false
>>> "pineapple" < "Peach"
false

EX 2

prefixes = "JKLMNOPQ"
suffix = "ack"

for letter in prefixes:
    if letter == "Q" or letter=="O":
        print(letter +"u"+ suffix)
    else:
        print(letter + suffix)
        
EX 3

def count_letters(fruit, letter):
    count = 0
    for char in fruit:
        if char == letter:
            count += 1
    print (count)
 
count_letters("banana", "a")

EX 4
def count_letters(fruit, letter, start):
    index = start
    while index < len(fruit):
        if fruit[index] == letter:
            print(index)
        index += 1
    return -1

count_letters( "banana" , "a" , 0 )

EX 5
import string

punctuation = "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"

def remove_punctuation(s):
    s_sans_punct = ""
    for letter in s:
        if letter not in punctuation:
            s_sans_punct += letter
    return s_sans_punct
    
def analysis(e):
    count=0
    letter=0
    for words in e:
        if words ==" ":
            count+=1
        else:
            continue
    for words in list(e):
        if words=="e":
            letter+=1
        else:
            continue
    print ("Your text contains",count+1,"words, of which",letter,'contain the letter "e"')
   
   
   EX 6
   
  
def table():
    layout = "{0:>5}{1:>5}{2:>5}{3:>5}{4:>5}{5:>5}{6:>5}{7:>5}{8:>5}{9:>5}{10:>5}{11:>5}{12:>5}"
    print(layout.format("t","1:", "2:", "3:", "4:", "5:", "6:", "7:", "8:", "9:", "10:", "11:", "12:"))
    print("   :------------------------------------------------------------")
    for i in range(1, 13):
        print(layout.format(i, i, i*2, i*3, i*4, i*5, i*6, i*7, i*8, i*9, i*10, i*11, i*12))

table()
   
   
EX 7

def reverse(n):
    reverse= n[::-1]
    print(reverse)

    
reverse("hola")

EX 8

def reverse(n):
    reverse= n[::-1]
    print(n+reverse)
    
reverse("hola")

EX 9
def remove(l,s):
    t=""
    if l not in s:
        return s
    else: 
        for i in s:
            if
